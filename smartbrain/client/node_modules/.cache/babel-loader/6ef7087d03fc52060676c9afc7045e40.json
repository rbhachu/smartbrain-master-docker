{"ast":null,"code":"var _jsxFileName = \"/smartbrain/client/src/components/Signin.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveAuthTokenInSessions = token => {\n      //window.localStorage.setItem('token', token); // local storage\n      window.sessionStorage.setItem('token', token); // session storage\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        //console.log(\"FORM VALID\");\n        this.setState({\n          form: ''\n        }); // clear form error\n\n        fetch(`${process.env.REACT_APP_SERVER_URL}/signin`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.state.email,\n            password: this.state.password\n          })\n        }).then(response => response.json()).then(data => {\n          // if login details valid\n          if (data && data.success === \"true\") {\n            this.saveAuthTokenInSessions(data.token); // generate token for session\n\n            this.props.loadUser(data.user); // login into db\n\n            this.props.onRouteChange('home'); // redirect to home route\n            // if login details invalid\n          } else {\n            this.setState({\n              form: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"Details invalid!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 51\n                }, this), \"Please check your details and try again\"]\n              }, void 0, true)\n            });\n          }\n        });\n      } else {\n        //console.log(\"FORM INVALID\");\n        if (!this.state.email || !this.state.password) {\n          this.setState({\n            form: 'Please enter details'\n          });\n        } else {\n          this.setState({\n            form: 'Please fix form errors!'\n          });\n        }\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 1 ? \"password required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }); // display inline error messages\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      form: \"\",\n      formErrors: {\n        email: \"\",\n        password: \"\",\n        form: \"\"\n      }\n    };\n  } // token generation for session\n\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"center measure\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        className: \"f1 fw6 ph0 mh0\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"signin\",\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          id: \"signin\",\n          className: \"b--transparent ph0 mh0 text-shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"db lh-copy f5 black b tl\",\n              htmlFor: \"email-address\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `f5 pa2 input-reset ba bg-white hover-bg-black hover-white w-100${formErrors.email && ' ba bw2 b--red'}`,\n              placeholder: \"Enter Email\",\n              type: \"email\",\n              name: \"email\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), formErrors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dib bg-red white ma3 pa2 f5 ttc shadow-1\",\n              children: formErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"db lh-copy f5 black b tl\",\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `f5 pa2 input-reset ba bg-white hover-bg-black hover-white w-100${formErrors.password && ' ba bw2 b--red'}`,\n              placeholder: \"Enter Password\",\n              type: \"password\",\n              name: \"password\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), formErrors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dib bg-red white ma3 pa2 f5 ttc shadow-1\",\n              children: formErrors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt3 tc\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleSubmit // function that gets called to change state to 'home'\n            ,\n            className: \"b ph3 pv2 input-reset ba bg-black white grow pointer f6 dib hover-bg-yellow ttu shadow-1\",\n            type: \"submit\",\n            value: \"Sign In\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), this.state.form && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dib bg-red white ma3 pa2 f5 ttc shadow-1 lh-copy\",\n              children: this.state.form\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Signin;","map":{"version":3,"sources":["/smartbrain/client/src/components/Signin.js"],"names":["React","Component","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Signin","constructor","props","saveAuthTokenInSessions","token","window","sessionStorage","setItem","handleSubmit","e","preventDefault","state","setState","form","fetch","process","env","REACT_APP_SERVER_URL","method","headers","body","JSON","stringify","email","password","then","response","json","data","success","loadUser","user","onRouteChange","handleChange","name","value","target","test","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\n\nclass Signin extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      password: null,\n      form: \"\",\n      formErrors: {\n        email: \"\",\n        password: \"\",\n        form: \"\"\n      }\n    };\n  }\n\n  // token generation for session\n  saveAuthTokenInSessions = (token) => { \n    //window.localStorage.setItem('token', token); // local storage\n    window.sessionStorage.setItem('token', token); // session storage\n  }\n\n  // on submit\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      //console.log(\"FORM VALID\");\n      this.setState({form: ''}) // clear form error\n\n      fetch(`${process.env.REACT_APP_SERVER_URL}/signin`, {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      })\n      .then(response => response.json())\n      .then(data => {\n        // if login details valid\n        if (data && data.success === \"true\") {\n          this.saveAuthTokenInSessions(data.token) // generate token for session\n          this.props.loadUser(data.user) // login into db\n          this.props.onRouteChange('home'); // redirect to home route\n        // if login details invalid\n        } else {\n          this.setState({form: (<>Details invalid!<br />Please check your details and try again</>) })\n        }\n      })\n    } else {\n      //console.log(\"FORM INVALID\");\n      if ( !this.state.email || !this.state.password ) {\n        this.setState({form: 'Please enter details'})\n      } else {\n        this.setState({form: 'Please fix form errors!'})\n      }\n\n    }\n  };\n\n  // on change\n  handleChange = (e) => {\n    e.preventDefault();\n\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n        case \"email\":\n        formErrors.email = emailRegex.test(value)\n            ? \"\"\n            : \"invalid email address\";\n        break;\n        case \"password\":\n        formErrors.password =\n            value.length < 1 ? \"password required\" : \"\";\n        break;\n\n        default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }); // display inline error messages\n  };\n\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <article className=\"center measure\">\n\n          <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n\n            <form id=\"signin\">\n          \n              <fieldset id=\"signin\" className=\"b--transparent ph0 mh0 text-shadow\">\n              \n                <div className=\"mt3\">\n                  <label className=\"db lh-copy f5 black b tl\" htmlFor=\"email-address\">Email</label>\n                  <input\n                    className={`f5 pa2 input-reset ba bg-white hover-bg-black hover-white w-100${formErrors.email && ' ba bw2 b--red'}`} \n                    placeholder=\"Enter Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                  {formErrors.email && (\n                    <span className=\"dib bg-red white ma3 pa2 f5 ttc shadow-1\">{formErrors.email}</span>\n                  )}\n                </div>\n\n                <div className=\"mt3\">\n                  <label className=\"db lh-copy f5 black b tl\" htmlFor=\"password\">Password</label>\n                  <input\n                    className={`f5 pa2 input-reset ba bg-white hover-bg-black hover-white w-100${formErrors.password && ' ba bw2 b--red'}`}\n                    placeholder=\"Enter Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                  {formErrors.password && (\n                    <span className=\"dib bg-red white ma3 pa2 f5 ttc shadow-1\">{formErrors.password}</span>\n                  )}\n                </div>\n\n              </fieldset>\n\n              <div className=\"mt3 tc\">\n                <button\n                  onClick={this.handleSubmit} // function that gets called to change state to 'home'\n                  className=\"b ph3 pv2 input-reset ba bg-black white grow pointer f6 dib hover-bg-yellow ttu shadow-1\"\n                  type=\"submit\" \n                  value=\"Sign In\"\n                >Sign In</button>\n                {this.state.form && (\n                  <><br /><span className=\"dib bg-red white ma3 pa2 f5 ttc shadow-1 lh-copy\">{this.state.form}</span></>\n                )}\n              </div>\n\n            </form>\n\n      </article>\n\n    );\n\n  }\n\n}\n\nexport default Signin;"]},"metadata":{},"sourceType":"module"}