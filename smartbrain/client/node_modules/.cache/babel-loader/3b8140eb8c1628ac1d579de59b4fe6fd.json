{"ast":null,"code":"var _jsxFileName = \"/smartbrain/client/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport Tabs from \"../components/Tabs\";\nimport Register from '../components/Register';\nimport Signin from '../components/Signin';\nimport Signout from '../components/Signout';\nimport Profile from '../components/Profile';\nimport ImageLinkForm from '../components/ImageLinkForm';\nimport FaceRecognition from '../components/FaceRecognition';\nimport imgBrain from '../assets/brain-color.png';\nimport Tilt from 'react-parallax-tilt';\nimport Particles from \"react-tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: '',\n  // search form\n  imageUrl: '',\n  // image url\n  boxes: [],\n  // face boxes\n  route: 'signin',\n  // default route\n  isProfileOpen: false,\n  // \n  isSignedIn: false,\n  // \n  status: '',\n  // status messages\n  errors: '',\n  // error messages\n  user: {\n    // user details\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById('inputimage'); // get image dimensions\n\n      const width = Number(image.width); // image width\n\n      const height = Number(image.height); // image height\n\n      const boxData = data.outputs[0].data.regions; //console.log(`image width: ${width}`)\n      //console.log(`image height: ${height}`)\n\n      if (boxData) {\n        // if boxData not empty\n        this.setState({\n          status: `${boxData.length} human face(s) detected`\n        });\n        return boxData.map(face => {\n          const clarifaiFace = face.region_info.bounding_box;\n          return {\n            leftCol: clarifaiFace.left_col * width,\n            topRow: clarifaiFace.top_row * height,\n            rightCol: width - clarifaiFace.right_col * width,\n            bottomRow: height - clarifaiFace.bottom_row * height\n          };\n        });\n      } else {\n        // if boxData empty\n        // IF 'NO' FACES DETECTED IN IMAGE\n        //console.log(`empty`)\n        this.setState({\n          errors: `no human face(s) detected, please try another image`\n        });\n      }\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        input: e.target.value\n      }); // get value from form input\n    };\n\n    this.onSubmitReset = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      this.setState({\n        input: ''\n      }); // clear input form value after submit to avoid dupe submit\n\n      this.setState({\n        boxes: []\n      }); // reset box data\n\n      this.setState({\n        status: ''\n      }); // reset status\n\n      this.setState({\n        errors: ''\n      }); // reset errors\n    };\n\n    this.onSubmitImage = e => {\n      e.preventDefault(e);\n      this.onSubmitReset(); // call function to reset all form values\n\n      if (this.state.input.length === 0) {\n        this.setState({\n          errors: 'Please paste an image link into the form field to test'\n        });\n      } else {\n        fetch(`${process.env.REACT_APP_SERVER_URL}/imageurl`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': window.sessionStorage.getItem('token')\n          },\n          body: JSON.stringify({\n            input: this.state.input\n          })\n        }).then(response => response.json()).then(response => {\n          if (response) {\n            fetch(`${process.env.REACT_APP_SERVER_URL}/image`, {\n              method: 'put',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': window.sessionStorage.getItem('token')\n              },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            }).then(response => response.json()).then(count => {\n              this.setState(Object.assign(this.state.user, {\n                entries: count\n              }));\n            }).catch(console.log);\n          }\n\n          this.displayFaceBox(this.calculateFaceLocation(response));\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signin') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      } else {\n        this.setState({\n          isSignedIn: false\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  } // JWT Token/Session\n\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem('token');\n\n    if (token) {\n      fetch(`${process.env.REACT_APP_SERVER_URL}/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        }\n      }).then(response => response.json()).then(data => {\n        if (data && data.id) {\n          fetch(`${process.env.REACT_APP_SERVER_URL}/profile/${data.id}`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            }\n          }).then(response => response.json()).then(user => {\n            if (user && user.email) {\n              this.loadUser(user);\n              this.onRouteChange('home');\n            }\n          });\n        }\n      }).catch(console.log);\n    }\n  } // Logged In User Details\n\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes,\n      user\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        id: \"tsparticles\",\n        url: `${process.env.REACT_APP_CLIENT_URL}/particles.json`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(Tilt, {\n            className: \"Tilt\",\n            options: {\n              max: 55\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"f2 black b\",\n              children: \"SmartBrain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgBrain,\n              width: \"50\",\n              height: \"50\",\n              alt: \"SmartBrain\",\n              title: \"SmartBrain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [// Home\n          isSignedIn && route === 'home' && /*#__PURE__*/_jsxDEV(Tabs, {\n            children: [/*#__PURE__*/_jsxDEV(\"article\", {\n              label: \"tab1\",\n              id: \"Home\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content shadow-5\",\n                children: [/*#__PURE__*/_jsxDEV(ImageLinkForm, {\n                  onInputChange: this.onInputChange,\n                  onSubmitImage: this.onSubmitImage,\n                  input: this.state.input,\n                  status: this.state.status,\n                  errors: this.state.errors,\n                  name: this.state.user.name,\n                  entries: this.state.user.entries\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), this.state.imageUrl && /*#__PURE__*/_jsxDEV(FaceRecognition, {\n                  boxes: boxes,\n                  imageUrl: imageUrl,\n                  errors: this.state.errors\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n              label: \"tab2\",\n              id: \"View Profile\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content shadow-5\",\n                children: /*#__PURE__*/_jsxDEV(Profile, {\n                  user: user,\n                  loadUser: this.loadUser\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n              label: \"tab3\",\n              id: \"Sign-Out\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content shadow-5\",\n                children: /*#__PURE__*/_jsxDEV(Signout, {\n                  onSubmitReset: this.onSubmitReset,\n                  onRouteChange: this.onRouteChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), // Sign In / Register\n          !isSignedIn && route === 'signin' && /*#__PURE__*/_jsxDEV(Tabs, {\n            children: [/*#__PURE__*/_jsxDEV(\"article\", {\n              label: \"tab1\",\n              id: \"Sign-In\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content shadow-5\",\n                children: /*#__PURE__*/_jsxDEV(Signin, {\n                  loadUser: this.loadUser,\n                  onRouteChange: this.onRouteChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n              label: \"tab2\",\n              id: \"Register\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content shadow-5\",\n                children: /*#__PURE__*/_jsxDEV(Register, {\n                  loadUser: this.loadUser,\n                  onRouteChange: this.onRouteChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/smartbrain/client/src/containers/App.js"],"names":["React","Component","Tabs","Register","Signin","Signout","Profile","ImageLinkForm","FaceRecognition","imgBrain","Tilt","Particles","initialState","input","imageUrl","boxes","route","isProfileOpen","isSignedIn","status","errors","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","image","document","getElementById","width","Number","height","boxData","outputs","regions","length","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","e","target","value","onSubmitReset","state","onSubmitImage","preventDefault","fetch","process","env","REACT_APP_SERVER_URL","method","headers","window","sessionStorage","getItem","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","componentDidMount","token","render","REACT_APP_CLIENT_URL","max"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Tabs from \"../components/Tabs\";\nimport Register from '../components/Register';\nimport Signin from '../components/Signin';\nimport Signout from '../components/Signout';\nimport Profile from '../components/Profile';\nimport ImageLinkForm from '../components/ImageLinkForm';\nimport FaceRecognition from '../components/FaceRecognition';\nimport imgBrain from '../assets/brain-color.png'\nimport Tilt from 'react-parallax-tilt';\nimport Particles from \"react-tsparticles\";\n\n\n  const initialState = {\n    input: '', // search form\n    imageUrl: '', // image url\n    boxes: [], // face boxes\n    route: 'signin', // default route\n    isProfileOpen: false, // \n    isSignedIn: false, // \n    status: '', // status messages\n    errors: '', // error messages\n    user: { // user details\n      id: '',\n      name: '',\n      email: '',\n      entries: 0,\n      joined: '',\n    }\n  }\n  \n  class App extends Component {\n  \n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n\n  // JWT Token/Session\n  componentDidMount() {\n    const token = window.sessionStorage.getItem('token');\n    if (token) {\n      fetch(`${process.env.REACT_APP_SERVER_URL}/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        }\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data && data.id) {\n              fetch(`${process.env.REACT_APP_SERVER_URL}/profile/${data.id}`, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n            })\n            .then(response => response.json())\n            .then(user => {\n              if (user && user.email) {\n                this.loadUser(user)\n                this.onRouteChange('home');\n              }\n            })\n          }\n        })\n        .catch(console.log)\n    }\n  }\n  // Logged In User Details\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\n  // Face API Bounding Box\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputimage'); // get image dimensions\n    const width = Number(image.width); // image width\n    const height = Number(image.height); // image height\n    const boxData = data.outputs[0].data.regions\n    //console.log(`image width: ${width}`)\n    //console.log(`image height: ${height}`)\n\n    if (boxData) { // if boxData not empty\n      this.setState({status: `${boxData.length} human face(s) detected`});\n      return boxData.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - (clarifaiFace.right_col * width),\n          bottomRow: height - (clarifaiFace.bottom_row * height)\n        }\n      });      \n    } else { // if boxData empty\n      // IF 'NO' FACES DETECTED IN IMAGE\n      //console.log(`empty`)\n      this.setState({errors: (`no human face(s) detected, please try another image`) });\n    }\n  }\n\n  displayFaceBox = (boxes) => {\n    this.setState({boxes: boxes});\n  }\n\n  // ImageLinkForm\n  onInputChange = (e) => {\n    this.setState({input: e.target.value}); // get value from form input\n  }\n\n  // reset all form values\n  onSubmitReset = () => {\n    this.setState({imageUrl: this.state.input});\n    this.setState({input:''}) // clear input form value after submit to avoid dupe submit\n    this.setState({boxes: []}); // reset box data\n    this.setState({status: ''}); // reset status\n    this.setState({errors: ''}); // reset errors\n  }\n\n  // ADD CHECK FORM\n  onSubmitImage = (e) => {\n    e.preventDefault(e);\n    this.onSubmitReset(); // call function to reset all form values\n\n    if (this.state.input.length === 0) {\n      this.setState({errors: 'Please paste an image link into the form field to test'});\n    } else {\n      fetch(`${process.env.REACT_APP_SERVER_URL}/imageurl`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': window.sessionStorage.getItem('token')\n          },\n          body: JSON.stringify({\n            input: this.state.input\n          })\n        })\n        .then(response => response.json())\n        .then(response => {\n          if (response) {\n            fetch(`${process.env.REACT_APP_SERVER_URL}/image`, {\n              method: 'put',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': window.sessionStorage.getItem('token')\n              },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n              .then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count}))          \n              })\n              .catch(console.log)\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch(err => console.log(err));\n      }\n\n  }\n\n  //Route Change Function\n  onRouteChange = (route) => {\n    if (route === 'signin') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    } else {\n      this.setState({isSignedIn: false})\n    }\n    this.setState({route: route});\n  }\n\n\n  render() {\n\n    const { isSignedIn, imageUrl, route, boxes, user } = this.state;\n\n\n  return (\n\n    <>\n\n      <Particles className='particles'\n      id=\"tsparticles\"\n      url={`${process.env.REACT_APP_CLIENT_URL}/particles.json`}\n      />\n\n      <div className=\"wrapper\">\n\n        <header>\n          <Tilt className=\"Tilt\" options={{ max : 55 }} >\n            <h1 className=\"f2 black b\">SmartBrain</h1>\n            <img src={imgBrain} width=\"50\" height=\"50\" alt=\"SmartBrain\" title=\"SmartBrain\" />\n          </Tilt>\n        </header>  \n\n\n        <section>\n\n          { // Home\n          isSignedIn && route === 'home' &&\n          (\n            <Tabs>\n              <article label=\"tab1\" id=\"Home\">\n                <div className=\"content shadow-5\">\n                  <ImageLinkForm\n                    onInputChange={this.onInputChange}\n                    onSubmitImage={this.onSubmitImage}\n                    input={this.state.input}\n                    status={this.state.status}\n                    errors={this.state.errors}\n                    name={this.state.user.name}\n                    entries={this.state.user.entries}\n                  />\n                    {/* <MyComponent /> */}\n                  { this.state.imageUrl && \n                    <FaceRecognition \n                      boxes={boxes} \n                      imageUrl={imageUrl} \n                      errors={this.state.errors} \n                  /> }\n                </div>\n              </article>\n\n              <article label=\"tab2\" id=\"View Profile\">\n                <div className=\"content shadow-5\">\n                  <Profile \n                    user={user} \n                    loadUser={this.loadUser} \n                  />\n                </div>\n              </article>        \n\n              <article label=\"tab3\" id=\"Sign-Out\">\n                <div className=\"content shadow-5\">\n                  <Signout \n                    onSubmitReset={this.onSubmitReset}\n                    onRouteChange={this.onRouteChange} \n                  />\n                </div>\n              </article>     \n            </Tabs>\n          )\n          }\n\n          { // Sign In / Register\n          !isSignedIn && route === 'signin' &&\n            (\n              <Tabs>\n                <article label=\"tab1\" id=\"Sign-In\">\n                  <div className=\"content shadow-5\">\n                  <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                  </div>\n                </article>\n\n                <article label=\"tab2\" id=\"Register\">\n                  <div className=\"content shadow-5\">\n                  <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                  </div>\n                </article>\n              </Tabs>\n            )\n          }\n\n        </section>\n    \n      </div>\n    \n    </>\n\n  );\n\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}