{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmitterInstance = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Enums_1 = require(\"../../Enums\");\n\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\n\nfunction randomCoordinate(position, offset) {\n  return position + offset * (Math.random() - 0.5);\n}\n\nfunction randomPosition(position, offset) {\n  return {\n    x: randomCoordinate(position.x, offset.x),\n    y: randomCoordinate(position.y, offset.y)\n  };\n}\n\nclass EmitterInstance {\n  constructor(emitters, container, emitterOptions, position) {\n    var _a, _b, _c, _d, _e, _f;\n\n    var _g;\n\n    this.emitters = emitters;\n    this.container = container;\n    this.firstSpawn = true;\n    this.currentDuration = 0;\n    this.currentEmitDelay = 0;\n    this.currentSpawnDelay = 0;\n    this.initialPosition = position;\n    this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n    this.spawnDelay = ((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    this.name = emitterOptions.name;\n    let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : particlesOptions.move = {};\n    (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : _g.direction = this.emitterOptions.direction;\n\n    if (this.emitterOptions.spawnColor !== undefined) {\n      this.spawnColor = Utils_1.ColorUtils.colorToHsl(this.emitterOptions.spawnColor);\n    }\n\n    this.paused = !this.emitterOptions.autoPlay;\n    this.particlesOptions = particlesOptions;\n    this.size = (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : (() => {\n      const size = new EmitterSize_1.EmitterSize();\n      size.load({\n        height: 0,\n        mode: Enums_1.SizeMode.percent,\n        width: 0\n      });\n      return size;\n    })();\n    this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\n    this.immortal = this.lifeCount <= 0;\n    this.play();\n  }\n\n  externalPlay() {\n    this.paused = false;\n    this.play();\n  }\n\n  externalPause() {\n    this.paused = true;\n    this.pause();\n  }\n\n  play() {\n    if (this.paused) {\n      return;\n    }\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n      if (this.emitDelay === undefined) {\n        this.emitDelay = 1000 * this.emitterOptions.rate.delay / this.container.retina.reduceFactor;\n      }\n\n      if (this.lifeCount > 0 || this.immortal) {\n        this.prepareToDie();\n      }\n    }\n  }\n\n  pause() {\n    if (this.paused) {\n      return;\n    }\n\n    delete this.emitDelay;\n  }\n\n  resize() {\n    const initialPosition = this.initialPosition;\n    this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  }\n\n  update(delta) {\n    var _a, _b, _c;\n\n    if (this.paused) {\n      return;\n    }\n\n    if (this.firstSpawn) {\n      this.firstSpawn = false;\n      this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n      this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n      delta.value = 0;\n    }\n\n    if (this.duration !== undefined) {\n      this.currentDuration += delta.value;\n\n      if (this.currentDuration >= this.duration) {\n        this.pause();\n\n        if (this.spawnDelay !== undefined) {\n          delete this.spawnDelay;\n        }\n\n        if (!this.immortal) {\n          this.lifeCount--;\n        }\n\n        if (this.lifeCount > 0 || this.immortal) {\n          this.position = this.calcPosition();\n          this.spawnDelay = ((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n        } else {\n          this.destroy();\n        }\n\n        this.currentDuration -= this.duration;\n        delete this.duration;\n      }\n    }\n\n    if (this.spawnDelay !== undefined) {\n      this.currentSpawnDelay += delta.value;\n\n      if (this.currentSpawnDelay >= this.spawnDelay) {\n        this.play();\n        this.currentSpawnDelay -= this.currentSpawnDelay;\n        delete this.spawnDelay;\n      }\n    }\n\n    if (this.emitDelay !== undefined) {\n      this.currentEmitDelay += delta.value;\n\n      if (this.currentEmitDelay >= this.emitDelay) {\n        this.emit();\n        this.currentEmitDelay -= this.emitDelay;\n      }\n    }\n  }\n\n  prepareToDie() {\n    var _a;\n\n    if (this.paused) {\n      return;\n    }\n\n    const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal) && duration !== undefined && duration > 0) {\n      this.duration = duration * 1000;\n    }\n  }\n\n  destroy() {\n    this.emitters.removeEmitter(this);\n  }\n\n  calcPosition() {\n    var _a, _b;\n\n    const container = this.container;\n    const percentPosition = this.emitterOptions.position;\n    return {\n      x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n      y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n    };\n  }\n\n  emit() {\n    var _a;\n\n    if (this.paused) {\n      return;\n    }\n\n    const container = this.container;\n    const position = this.position;\n    const offset = {\n      x: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n      y: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.height * this.size.height / 100 : this.size.height\n    };\n\n    for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n      const particlesOptions = Utils_1.Utils.deepExtend({}, this.particlesOptions);\n\n      if (this.spawnColor !== undefined) {\n        const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n\n        if (colorAnimation) {\n          const hueAnimation = colorAnimation;\n\n          if (hueAnimation.enable) {\n            this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n          } else {\n            const hslAnimation = colorAnimation;\n            this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n            this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n            this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n          }\n        }\n\n        if (!particlesOptions.color) {\n          particlesOptions.color = {\n            value: this.spawnColor\n          };\n        } else {\n          particlesOptions.color.value = this.spawnColor;\n        }\n      }\n\n      container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n    }\n  }\n\n  setColorAnimation(animation, initValue, maxValue) {\n    var _a;\n\n    const container = this.container;\n\n    if (!animation.enable) {\n      return initValue;\n    }\n\n    const colorOffset = Utils_1.NumberUtils.randomInRange(animation.offset);\n    const emitFactor = 1000 * this.emitterOptions.rate.delay / container.retina.reduceFactor;\n    const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n    return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n  }\n\n}\n\nexports.EmitterInstance = EmitterInstance;","map":{"version":3,"sources":["/smartbrain/client/node_modules/tsparticles/dist/Plugins/Emitters/EmitterInstance.js"],"names":["Object","defineProperty","exports","value","EmitterInstance","Utils_1","require","Enums_1","EmitterSize_1","randomCoordinate","position","offset","Math","random","randomPosition","x","y","constructor","emitters","container","emitterOptions","_a","_b","_c","_d","_e","_f","_g","firstSpawn","currentDuration","currentEmitDelay","currentSpawnDelay","initialPosition","Utils","deepExtend","spawnDelay","life","delay","retina","reduceFactor","calcPosition","name","particlesOptions","particles","move","direction","spawnColor","undefined","ColorUtils","colorToHsl","paused","autoPlay","size","EmitterSize","load","height","mode","SizeMode","percent","width","lifeCount","count","immortal","play","externalPlay","externalPause","pause","emitDelay","rate","prepareToDie","resize","isPointInside","canvas","update","delta","duration","destroy","emit","removeEmitter","percentPosition","i","quantity","colorAnimation","animation","hueAnimation","enable","h","setColorAnimation","hslAnimation","s","l","color","addParticle","initValue","maxValue","colorOffset","NumberUtils","randomInRange","emitFactor","colorSpeed","speed","fpsLimit"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\nfunction randomCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n}\nfunction randomPosition(position, offset) {\n    return {\n        x: randomCoordinate(position.x, offset.x),\n        y: randomCoordinate(position.y, offset.y),\n    };\n}\nclass EmitterInstance {\n    constructor(emitters, container, emitterOptions, position) {\n        var _a, _b, _c, _d, _e, _f;\n        var _g;\n        this.emitters = emitters;\n        this.container = container;\n        this.firstSpawn = true;\n        this.currentDuration = 0;\n        this.currentEmitDelay = 0;\n        this.currentSpawnDelay = 0;\n        this.initialPosition = position;\n        this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n        this.spawnDelay = (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = emitterOptions.name;\n        let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : (particlesOptions.move = {});\n        (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : (_g.direction = this.emitterOptions.direction);\n        if (this.emitterOptions.spawnColor !== undefined) {\n            this.spawnColor = Utils_1.ColorUtils.colorToHsl(this.emitterOptions.spawnColor);\n        }\n        this.paused = !this.emitterOptions.autoPlay;\n        this.particlesOptions = particlesOptions;\n        this.size =\n            (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : (() => {\n                const size = new EmitterSize_1.EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: Enums_1.SizeMode.percent,\n                    width: 0,\n                });\n                return size;\n            })();\n        this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\n        this.immortal = this.lifeCount <= 0;\n        this.play();\n    }\n    externalPlay() {\n        this.paused = false;\n        this.play();\n    }\n    externalPause() {\n        this.paused = true;\n        this.pause();\n    }\n    play() {\n        if (this.paused) {\n            return;\n        }\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n            if (this.emitDelay === undefined) {\n                this.emitDelay = (1000 * this.emitterOptions.rate.delay) / this.container.retina.reduceFactor;\n            }\n            if (this.lifeCount > 0 || this.immortal) {\n                this.prepareToDie();\n            }\n        }\n    }\n    pause() {\n        if (this.paused) {\n            return;\n        }\n        delete this.emitDelay;\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this.paused) {\n            return;\n        }\n        if (this.firstSpawn) {\n            this.firstSpawn = false;\n            this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n            delta.value = 0;\n        }\n        if (this.duration !== undefined) {\n            this.currentDuration += delta.value;\n            if (this.currentDuration >= this.duration) {\n                this.pause();\n                if (this.spawnDelay !== undefined) {\n                    delete this.spawnDelay;\n                }\n                if (!this.immortal) {\n                    this.lifeCount--;\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.position = this.calcPosition();\n                    this.spawnDelay =\n                        (((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this.currentDuration -= this.duration;\n                delete this.duration;\n            }\n        }\n        if (this.spawnDelay !== undefined) {\n            this.currentSpawnDelay += delta.value;\n            if (this.currentSpawnDelay >= this.spawnDelay) {\n                this.play();\n                this.currentSpawnDelay -= this.currentSpawnDelay;\n                delete this.spawnDelay;\n            }\n        }\n        if (this.emitDelay !== undefined) {\n            this.currentEmitDelay += delta.value;\n            if (this.currentEmitDelay >= this.emitDelay) {\n                this.emit();\n                this.currentEmitDelay -= this.emitDelay;\n            }\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this.duration = duration * 1000;\n        }\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.emitterOptions.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    emit() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const container = this.container;\n        const position = this.position;\n        const offset = {\n            x: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            y: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n        for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n            const particlesOptions = Utils_1.Utils.deepExtend({}, this.particlesOptions);\n            if (this.spawnColor !== undefined) {\n                const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (colorAnimation) {\n                    const hueAnimation = colorAnimation;\n                    if (hueAnimation.enable) {\n                        this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n                    }\n                    else {\n                        const hslAnimation = colorAnimation;\n                        this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = Utils_1.NumberUtils.randomInRange(animation.offset);\n        const emitFactor = (1000 * this.emitterOptions.rate.delay) / container.retina.reduceFactor;\n        const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\nexports.EmitterInstance = EmitterInstance;\n"]},"metadata":{},"sourceType":"script"}